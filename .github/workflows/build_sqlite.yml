name: Build SQLite


on: workflow_dispatch

  
env:
  SQLITE_TAG: version-3.47.2


jobs:
  windows-build:
    runs-on: windows-latest

    steps:
    - name: Get SQLite
      uses: actions/checkout@v4
      with:
        repository: sqlite/sqlite
        ref: ${{ env.SQLITE_TAG }}

    - name: Enable NMake
      uses: ilammy/msvc-dev-cmd@v1.13.0
        
    - name: Build
      run: |
          nmake /f Makefile.msc
          nmake /f Makefile.msc sqlite3.c

    - name: Prepare
      shell: bash
      run: |
          mkdir -p sqlite_windows/dll
          mkdir sqlite_windows/lib
          mkdir sqlite_windows/include
          mv sqlite3.dll sqlite_windows/dll
          mv sqlite3.lib sqlite_windows/lib
          mv sqlite3.h sqlite_windows/include

    - name: Upload SQLite
      uses: actions/upload-artifact@v4
      with:
        name: sqlite_windows
        path: sqlite_windows

    
  linux-build:
    runs-on: ubuntu-latest
    container:
      image: lazypanda07/ubuntu_cxx20:24.04

    steps:
    - name: Get SQLite
      uses: actions/checkout@v4
      with:
        repository: sqlite/sqlite
        ref: ${{ env.SQLITE_TAG }}
        
    - name: Build
      run: |
          mkdir build
          cd build
          ../configure
          make -j $(nproc)
          make sqlite3.c -j $(nproc)
          gcc -DSQLITE_THREADSAFE=1 sqlite3.c -shared -O3 -fPIC -lpthread -ldl -o libsqlite3.so
      
    - name: Prepare
      run: |
          mkdir -p sqlite_linux/lib
          mkdir sqlite_linux/include
          mv build/libsqlite3.so sqlite_linux/lib
          mv build/sqlite3.h sqlite_linux/include

    - name: Upload SQLite
      uses: actions/upload-artifact@v4
      with:
        name: sqlite_linux
        path: sqlite_linux


  android-build:
    runs-on: ubuntu-latest
    env:
      android-version: android-35
      android-api-version: android-35
      sdk-install-name: platforms;android-35
      ndk-version: 28.0.12433566
      ndk-install-name: ndk;28.0.12433566

    steps:
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: adopt

    - name: Get SQLite
      uses: actions/checkout@v4
      with:
        repository: sqlite/sqlite
        ref: ${{ env.SQLITE_TAG }}

    - name: Get Android SDK
      run: wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O tools.zip

    - name: Setup Android SDK
      run: |
        unzip tools.zip
        rm -rf tools.zip
        shopt -s extglob
        cd cmdline-tools
        mkdir latest
        mv !(latest) latest/
        cd ..
        mkdir -p Android/Sdk
        mv cmdline-tools Android/Sdk
        cd Android/Sdk/cmdline-tools/latest/bin
        yes | ./sdkmanager --licenses
        ./sdkmanager "${{ env.sdk-install-name }}"
        ./sdkmanager --install "${{ env.ndk-install-name }}"
        ./sdkmanager --list | grep ndk

    - name: Build
      run: |
        export NDK_PATH=$(pwd)/Android/Sdk/ndk/${{ env.ndk-version }}
        wget -O CMakeLists.txt https://pastebin.com/raw/RWw571SP
        mkdir build
        cd build
        ../configure
        make -j $(nproc)
        make sqlite3.c -j $(nproc)
        export CC=${NDK_PATH}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-${{ env.android-version }}-clang
        export CXX=${NDK_PATH}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-${{ env.android-version }}-clang++
        cmake -DCMAKE_INSTALL_PREFIX=../sqlite_android -DANDROID_ABI=arm64-v8a -DANDROID_PLATFORM=${{ env.android-api-version }} -DCMAKE_TOOLCHAIN_FILE=${NDK_PATH}/build/cmake/android.toolchain.cmake ..
        make install -j $(nproc)

    - name: Upload SQLite
      uses: actions/upload-artifact@v4
      with:
        name: sqlite_android
        path: sqlite_android
